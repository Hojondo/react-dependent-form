{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["mockOption","value","label","App","useState","formValues","setformValues","className","onSubmit","vals","name","tips","optionsData","multiple","defaultValue","resetCallBack","console","log","style","marginTop","JSON","stringify","replaceAll","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAeMA,EAAa,CACjB,CAAEC,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,IAAKC,MAAO,MA6DRC,MA3Df,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,KAEb,OACE,sBAAKC,UAAU,MAAf,UACE,eAAC,OAAD,CACEC,SAAU,SAACC,GACTH,EAAcG,IAFlB,UAKE,cAAC,YAAD,CAAWC,KAAK,QAAQR,MAAM,aAAaS,KAAK,SAChD,cAAC,iBAAD,CACED,KAAK,YACLR,MAAM,YACNU,YAAaZ,EACbW,KAAK,QAEP,cAAC,iBAAD,CACEE,UAAU,EACVH,KAAK,gBACLR,MAAM,qBACNU,YAAaZ,EACbW,KAAK,QAEP,cAAC,cAAD,CAAaD,KAAK,SAASR,MAAM,SAASU,YAAaZ,IACvD,cAAC,kBAAD,CACEU,KAAK,OACLR,MAAM,oBACNS,KAAK,cACLG,aAAa,eAEf,cAAC,sBAAD,CACEJ,KAAK,WACLR,MAAM,yBACNS,KAAK,gBAEP,cAAC,uBAAD,CACED,KAAK,aACLR,MAAM,0BACNS,KAAK,gBAEP,cAAC,aAAD,CAAYD,KAAK,QAAQR,MAAM,QAAQU,YAAaZ,IACpD,cAAC,gBAAD,CAAeU,KAAK,WAAWR,MAAM,aAAaY,cAAc,IAChE,gCACE,cAAC,gBAAD,oCACA,cAAC,eAAD,CACEC,cAAe,WACbC,QAAQC,IAAI,mCAKpB,sBAAKC,MAAO,CAAEC,UAAW,QAAzB,UACE,kDACA,8BAAMC,KAAKC,UAAUhB,GAAYiB,WAAW,IAAK,eC5D1CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a832a1d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Form,\n  FieldText,\n  FieldAutoInput,\n  FieldSelect,\n  FieldDatePicker,\n  FieldDateTimePicker,\n  FieldDateRangePicker,\n  FieldRadio,\n  FieldCheckbox,\n  FormResetBtn,\n  FormSubmitBtn,\n} from \"react-dependent-form\";\n\nconst mockOption = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n];\nfunction App() {\n  const [formValues, setformValues] = useState({});\n  return (\n    <div className=\"App\">\n      <Form\n        onSubmit={(vals) => {\n          setformValues(vals);\n        }}\n      >\n        <FieldText name=\"input\" label=\"Field Text\" tips=\"tips\" />\n        <FieldAutoInput\n          name=\"autoInput\"\n          label=\"AutoInput\"\n          optionsData={mockOption}\n          tips=\"sss\"\n        />\n        <FieldAutoInput\n          multiple={true}\n          name=\"mul-autoInput\"\n          label=\"Multiple AutoInput\"\n          optionsData={mockOption}\n          tips=\"sss\"\n        />\n        <FieldSelect name=\"select\" label=\"Select\" optionsData={mockOption} />\n        <FieldDatePicker\n          name=\"date\"\n          label=\"Field Date Picker\"\n          tips=\"It is a tip\"\n          defaultValue=\"2021-04-21\"\n        />\n        <FieldDateTimePicker\n          name=\"datetime\"\n          label=\"Field Date Time Picker\"\n          tips=\"It is a tip\"\n        />\n        <FieldDateRangePicker\n          name=\"date-range\"\n          label=\"Field Date Range Picker\"\n          tips=\"It is a tip\"\n        />\n        <FieldRadio name=\"radio\" label=\"Radio\" optionsData={mockOption} />\n        <FieldCheckbox name=\"checkbox\" label=\"Check This\" defaultValue={true} />\n        <div>\n          <FormSubmitBtn>custom-submit-content</FormSubmitBtn>\n          <FormResetBtn\n            resetCallBack={() => {\n              console.log(\"trigger reset callback\");\n            }}\n          />\n        </div>\n      </Form>\n      <div style={{ marginTop: \"5rem\" }}>\n        <h3>Submit Results: </h3>\n        <pre>{JSON.stringify(formValues).replaceAll(\",\", \"\\n\")}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}